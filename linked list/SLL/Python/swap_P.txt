Start from the head node and traverse the list. While traversing swap data of each node with its next nodeâ€™s data.


class Node: 
 
	def __init__(self, data): 
		self.data = data 
		self.next = None

class LinkedList: 

	def __init__(self): 
		self.head = None
 
	def pairwiseSwap(self): 
		temp = self.head 
 
		if temp is None: 
			return

		while(temp is not None and temp.next is not None): 

			temp.data, temp.next.data = temp.next.data, temp.data 

			temp = temp.next.next

	def push(self, new_data): 
		new_node = Node(new_data) 
		new_node.next = self.head 
		self.head = new_node 

	def printList(self): 
		temp = self.head 
		while(temp): 
			print temp.data, 
			temp = temp.next


llist = LinkedList() 
llist.push(5) 
llist.push(4) 
llist.push(3) 
llist.push(2) 
llist.push(1) 

print "Linked list before calling pairWiseSwap() "
llist.printList() 

llist.pairwiseSwap() 

print "\nLinked list after calling pairWiseSwap()"
llist.printList() 


Output:
Linked List before calling pairWiseSwap() 
1 2 3 4 5 
Linked List after calling pairWiseSwap() 
2 1 4 3 5 