Counting Sort :

Counting sort is a sorting technique based on keys between a specific range. 
It works by counting the number of objects having distinct key values . 
Then doing some arithmetic to calculate the position of each object in the output sequence.



Time Complexity: O(n+k) where n is the number of elements in input array and k is the range of input.

Auxiliary Space: O(n+k)


Program : JAVA

class CountingSort 
{ 
	void sort(char arr[]) 
	{ 
		int n = arr.length; 

		char output[] = new char[n]; 

		int count[] = new int[256]; 
		for (int i=0; i<256; ++i) 
			count[i] = 0; 

		for (int i=0; i<n; ++i) 
			++count[arr[i]]; 

		for (int i=1; i<=255; ++i) 
			count[i] += count[i-1]; 
 
		for (int i = n-1; i>=0; i--) 
		{ 
			output[count[arr[i]]-1] = arr[i]; 
			--count[arr[i]]; 
		} 

		for (int i = 0; i<n; ++i) 
			arr[i] = output[i]; 
	} 

	public static void main(String args[]) 
	{ 
		CountingSort ob = new CountingSort(); 
		char arr[] = {'g', 'o', 'o', 'd', 'm', 'o', 'r', 
					'n', 'i', 'n', 'g' }; 

		ob.sort(arr); 

		System.out.print("Sorted character array is "); 
		for (int i=0; i<arr.length; ++i) 
			System.out.print(arr[i]); 
	} 
}









Program : C++

#include<bits/stdc++.h> 
#include<string.h> 
using namespace std; 
#define RANGE 255 
 
void countSort(char arr[]) 
{ 
	char output[strlen(arr)]; 

	int count[RANGE + 1], i; 
	memset(count, 0, sizeof(count)); 

	for(i = 0; arr[i]; ++i) 
		++count[arr[i]]; 

	for (i = 1; i <= RANGE; ++i) 
		count[i] += count[i-1]; 

	for (i = 0; arr[i]; ++i) 
	{ 
		output[count[arr[i]]-1] = arr[i]; 
		--count[arr[i]]; 
	} 

 
	for (i = 0; arr[i]; ++i) 
		arr[i] = output[i]; 
} 

int main() 
{ 
	char arr[] = "goodmorning"; 

	countSort(arr); 

	cout<< "Sorted character array is " << arr; 
	return 0; 
} 










Program : PYTHON

def countSort(arr): 

	output = [0 for i in range(256)] 

	count = [0 for i in range(256)] 

	ans = ["" for _ in arr] 

	for i in arr: 
		count[ord(i)] += 1

	for i in range(256): 
		count[i] += count[i-1] 
 
	for i in range(len(arr)): 
		output[count[ord(arr[i])]-1] = arr[i] 
		count[ord(arr[i])] -= 1

	for i in range(len(arr)): 
		ans[i] = output[i] 
	return ans 

arr = "goodmorning"
ans = countSort(arr) 
print "Sorted character array is %s" %("".join(ans)) 



Output :
Sorted character array is dggimnnooor