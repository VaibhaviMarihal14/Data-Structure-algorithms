Selection sort :

Selection sort is a simple sorting algorithm. This sorting algorithm is an in-place comparison-based algorithm in which ,
the list is divided into two parts, the sorted part at the left end and the unsorted part at the right end. 
Initially, the sorted part is empty and the unsorted part is the entire list .

The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from unsorted part 
and putting it at the beginning. The algorithm maintains two subarrays in a given array.

1) The subarray which is already sorted.
2) Remaining subarray which is unsorted.



Time Complexity: O(n2) as there are two nested loops.

Auxiliary Space: O(1)


Program :

class SelectionSort 
{ 
	void sort(int arr[]) 
	{ 
		int n = arr.length; 

		for (int i = 0; i < n-1; i++) 
		{ 
			int min_idx = i; 
			for (int j = i+1; j < n; j++) 
				if (arr[j] < arr[min_idx]) 
					min_idx = j; 

			int temp = arr[min_idx]; 
			arr[min_idx] = arr[i]; 
			arr[i] = temp; 
		} 
	} 

	void printArray(int arr[]) 
	{ 
		int n = arr.length; 
		for (int i=0; i<n; ++i) 
			System.out.print(arr[i]+" "); 
		System.out.println(); 
	} 

	public static void main(String args[]) 
	{ 
		SelectionSort ob = new SelectionSort(); 
		int arr[] = {64,25,12,22,11}; 
		ob.sort(arr); 
		System.out.println("Sorted array"); 
		ob.printArray(arr); 
	} 
} 

Output:
Sorted array: 
11 12 22 25 64